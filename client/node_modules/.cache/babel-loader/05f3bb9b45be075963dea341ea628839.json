{"ast":null,"code":"import _objectSpread from \"/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/src/components/company/auth/Company_login.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setAlert } from '../../../actions/alert'; // components\n\nimport Navbar from '../../layout/Navbar';\nimport Alert from '../../layout/common/Alert'; // actions\n\nimport { register, login } from '../../../actions/auth'; // css\n\nimport '../../../css/business_login.css';\nimport '../../../css/stuck.css'; // images\n\nimport StuckCoder_Lying_Original_White_BG from \"../../../img/official/StuckCoder_Lying_Original_White_BG.svg\"; // Utils\n\nconst jwtDecode = require('jwt-decode');\n\nconst Company_login = ({\n  setAlert,\n  register,\n  login,\n  isAuthenticated\n}) => {\n  // Login Form\n  const _useState = useState({\n    loginemail: '',\n    loginpassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginFormData = _useState2[0],\n        setLoginFormData = _useState2[1];\n\n  const loginemail = loginFormData.loginemail,\n        loginpassword = loginFormData.loginpassword;\n\n  const loginOnChange = e => setLoginFormData(_objectSpread({}, loginFormData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmitLogin = async e => {\n    e.preventDefault();\n    login(loginemail, loginpassword);\n  }; // Registration Form\n\n\n  const _useState3 = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formData = _useState4[0],\n        setFormData = _useState4[1];\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'red');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  }; // Check type of user before redirect\n  // Redirects you to dashboard if logged in\n\n\n  if (isAuthenticated) {\n    if (localStorage.token) {\n      const decoded = jwtDecode(localStorage.token);\n      const accesscontrol = decoded.user.role;\n\n      if (accesscontrol === 1) {\n        return React.createElement(Redirect, {\n          to: \"/c_dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      } else if (accesscontrol === 2) {\n        return React.createElement(Redirect, {\n          to: \"s_dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      } else {\n        return;\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: \"main-login-business\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"st-card-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"st-image-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: StuckCoder_Lying_Original_White_BG,\n    className: \"st-image-3\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"st-card-el-h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Business Login\"), React.createElement(\"form\", {\n    className: \"st-form\",\n    onSubmit: onSubmitLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"loginemail\",\n    value: loginemail,\n    onChange: e => loginOnChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"loginpassword\",\n    value: loginpassword,\n    onChange: e => loginOnChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"st-button-secondary\",\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Enter\")), React.createElement(\"div\", {\n    className: \"st-card-el-h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Or\"), React.createElement(\"div\", {\n    className: \"st-card-el-p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Register a new business\"), React.createElement(\"div\", {\n    className: \"st-card-el-h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Business Registration\"), React.createElement(\"form\", {\n    className: \"st-form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"st-button-secondary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Create\")), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"st-card-el-p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Copyright \\xA9 Stuckcoder AS 2019 - All Rights Reserved\")));\n};\n\nCompany_login.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n}); // connect(<state>, <{actions}>)\n\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register,\n  login\n})(Company_login);","map":{"version":3,"sources":["/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/src/components/company/auth/Company_login.js"],"names":["React","useState","Redirect","connect","PropTypes","setAlert","Navbar","Alert","register","login","jwtDecode","require","Company_login","isAuthenticated","loginemail","loginpassword","loginFormData","setLoginFormData","loginOnChange","e","target","name","value","onSubmitLogin","preventDefault","email","password","password2","formData","setFormData","onChange","onSubmit","localStorage","token","decoded","accesscontrol","user","role","StuckCoder_Lying_Original_White_BG","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { setAlert } from '../../../actions/alert';\n// components\nimport Navbar from '../../layout/Navbar';\nimport Alert from '../../layout/common/Alert';\n// actions\nimport {register, login} from '../../../actions/auth';\n\n// css\nimport '../../../css/business_login.css';\nimport '../../../css/stuck.css';\n// images\nimport StuckCoder_Lying_Original_White_BG from '../../../img/official/StuckCoder_Lying_Original_White_BG.svg';\n// Utils\nconst jwtDecode = require('jwt-decode');\n\nconst Company_login = ({ setAlert, register, login, isAuthenticated }) => {\n\n    // Login Form\n    const [loginFormData, setLoginFormData] = useState({\n        loginemail: '',\n        loginpassword: ''\n    });\n    const {loginemail, loginpassword} = loginFormData;\n    const loginOnChange = e => setLoginFormData({ ...loginFormData, [e.target.name]: e.target.value});\n\n    const onSubmitLogin = async (e) => {\n        e.preventDefault();\n        login(loginemail, loginpassword);\n\n    }\n\n    // Registration Form\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n    const {name,email,password,password2} = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if(password !== password2) {\n            setAlert('Passwords do not match', 'red');\n        } else{\n            register({name,email,password});\n        }\n\n    }\n    // Check type of user before redirect\n\n    // Redirects you to dashboard if logged in\n    if(isAuthenticated){\n        if(localStorage.token){\n            const decoded = jwtDecode(localStorage.token);\n            const accesscontrol = decoded.user.role;\n            if(accesscontrol === 1){\n                return <Redirect to=\"/c_dashboard\" />\n            } else if(accesscontrol === 2) {\n                return <Redirect to=\"s_dashboard\" />\n            } else {\n                return\n            }\n        }\n    }\n    return (\n        <div className=\"container-login\">\n\n            <Navbar />\n    \n            <main className=\"main-login-business\">\n\n                <div className=\"left\">\n\n                    <div className=\"st-card-login\">\n                        <div className=\"st-image-2\">\n                            <img src={StuckCoder_Lying_Original_White_BG} className=\"st-image-3\" alt=\"\"></img>\n                        </div>\n                        <div className=\"st-card-el-h2\">Business Login</div>\n\n                        <form className=\"st-form\" onSubmit={onSubmitLogin}>\n\n                            <input \n                            className=\"st-input-field\" \n                            type='text' \n                            placeholder='Email' \n                            name='loginemail' \n                            value={loginemail} \n                            onChange={e => loginOnChange(e)}\n                            required\n                            ></input>\n\n                            <input \n                            className=\"st-input-field\" \n                            type='password' \n                            placeholder='Password' \n                            name='loginpassword' \n                            value={loginpassword} \n                            onChange={e => loginOnChange(e)}\n                            required\n                            ></input>\n\n                            <button type=\"submit\" className=\"st-button-secondary\" value=\"Login\">Enter</button>\n\n                        </form>\n\n                        <div className=\"st-card-el-h2\">Or</div>\n                        <div className=\"st-card-el-p\">Register a new business</div>\n\n                        <div className=\"st-card-el-h2\">Business Registration</div>\n\n                        <form className=\"st-form\" onSubmit={onSubmit}>\n\n                        <input \n                            className=\"st-input-field\" \n                            type='text' \n                            placeholder='Name' \n                            name='name' \n                            value={name} \n                            onChange={e => onChange(e)}\n                            required\n                        ></input>\n                        \n                        <input \n                            className=\"st-input-field\" \n                            type='text' \n                            placeholder='Email' \n                            name='email' \n                            value={email} \n                            onChange={e => onChange(e)}\n                            required\n                        ></input>\n\n                        <input \n                            className=\"st-input-field\" \n                            type='password' \n                            placeholder='Password' \n                            name='password' \n                            value={password} \n                            onChange={e => onChange(e)} \n                            required\n                            ></input>\n\n                            <input \n                            className=\"st-input-field\" \n                            type='password' \n                            placeholder='Confirm Password' \n                            name='password2' \n                            value={password2} \n                            onChange={e => onChange(e)}\n                            required\n                        ></input>\n\n                        <button type=\"submit\" className=\"st-button-secondary\" value=\"Register\">Create</button>\n\n                        </form>\n\n                        <Alert />\n\n                        \n                    </div>\n\n                </div>\n\n\n                <div className=\"right\"></div>\n\n\n            </main>\n\n            <div className=\"footer\">\n                <div className=\"st-card-el-p\">Copyright &copy; Stuckcoder AS 2019 - All Rights Reserved</div>\n            </div>\n    </div>\n    )\n}\n\nCompany_login.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\n// connect(<state>, <{actions}>)\nexport default connect(mapStateToProps, { setAlert, register, login })(Company_login);\n"]},"metadata":{},"sourceType":"module"}