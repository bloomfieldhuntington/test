{"ast":null,"code":"import _objectSpread from \"/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/src/components/company/auth/Company_login.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios'; // components\n\nimport Navbar from '../../layout/Navbar'; // css\n\nimport '../../../css/business_login.css';\nimport '../../../css/stuck.css'; // images\n\nimport StuckCoder_Lying_Original_White_BG from \"../../../img/official/StuckCoder_Lying_Original_White_BG.svg\";\n\nconst Company_login = () => {\n  // Login Form\n  const _useState = useState({\n    loginemail: '',\n    loginpassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginFormData = _useState2[0],\n        setLoginFormData = _useState2[1];\n\n  const loginemail = loginFormData.loginemail,\n        loginpassword = loginFormData.loginpassword;\n\n  const loginOnChange = e => setLoginFormData(_objectSpread({}, loginFormData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmitLogin = e => {}; // Registration Form\n\n\n  const _useState3 = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formData = _useState4[0],\n        setFormData = _useState4[1];\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      console.log('Passwords does not match');\n    } else {\n      const newUser = {\n        name: name,\n        email: email,\n        password: password\n      };\n\n      try {\n        // create correct headers\n        const config = {\n          headers: {\n            'Content-Type': 'application/json'\n          } // render newUser into json\n\n        };\n        const body = JSON.stringify(newUser); // post user object with axios('route', content, config)\n\n        const res = await axios.post('/api/c_users', body, config);\n        console.log(res.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: \"main-login-business\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"st-card-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"st-image-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: StuckCoder_Lying_Original_White_BG,\n    className: \"st-image-3\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"st-card-el-h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Business Login\"), React.createElement(\"form\", {\n    className: \"st-form\",\n    onSubmit: onSubmitLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"loginemail\",\n    value: loginemail,\n    onChange: e => loginOnChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"loginpassword\",\n    value: loginpassword,\n    onChange: e => loginOnChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"st-button-secondary\",\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Enter\")), React.createElement(\"div\", {\n    className: \"st-card-el-h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Or\"), React.createElement(\"div\", {\n    className: \"st-card-el-p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Register a new business\"), React.createElement(\"div\", {\n    className: \"st-card-el-h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Business Registration\"), React.createElement(\"form\", {\n    className: \"st-form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"st-input-field\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"st-button-secondary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Create\")))), React.createElement(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"st-card-el-p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Copyright \\xA9 Stuckcoder AS 2019 - All Rights Reserved\")));\n};\n\nexport default Company_login;","map":{"version":3,"sources":["/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/src/components/company/auth/Company_login.js"],"names":["React","useState","axios","Navbar","Company_login","loginemail","loginpassword","loginFormData","setLoginFormData","loginOnChange","e","target","name","value","onSubmitLogin","email","password","password2","formData","setFormData","onChange","onSubmit","preventDefault","console","log","newUser","config","headers","body","JSON","stringify","res","post","data","err","error","response","StuckCoder_Lying_Original_White_BG"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\n// components\nimport Navbar from '../../layout/Navbar';\n// css\nimport '../../../css/business_login.css';\nimport '../../../css/stuck.css';\n// images\nimport StuckCoder_Lying_Original_White_BG from '../../../img/official/StuckCoder_Lying_Original_White_BG.svg';\n\nconst Company_login = () => {\n\n    // Login Form\n    const [loginFormData, setLoginFormData] = useState({\n        loginemail: '',\n        loginpassword: ''\n    });\n    const {loginemail, loginpassword} = loginFormData;\n    const loginOnChange = e => setLoginFormData({ ...loginFormData, [e.target.name]: e.target.value});\n\n    const onSubmitLogin = (e) => {\n\n    }\n\n    // Registration Form\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n    const {name,email,password,password2} = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if(password !== password2) {\n            console.log('Passwords does not match')\n        } else{\n            const newUser = {\n                name: name,\n                email: email,\n                password: password\n            }\n\n            try {\n                // create correct headers\n                const config ={\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n                // render newUser into json\n                const body = JSON.stringify(newUser);\n                // post user object with axios('route', content, config)\n                const res = await axios.post('/api/c_users', body, config);\n                console.log(res.data);\n            } catch (err) {\n                console.error(err.response.data);\n            }\n        }\n\n    }\n    \n    return (\n        <div className=\"container-login\">\n\n            <Navbar />\n\n            <main className=\"main-login-business\">\n\n                <div className=\"left\">\n\n                    <div className=\"st-card-login\">\n                        <div className=\"st-image-2\">\n                            <img src={StuckCoder_Lying_Original_White_BG} className=\"st-image-3\" alt=\"\"></img>\n                        </div>\n                        <div className=\"st-card-el-h2\">Business Login</div>\n\n                        <form className=\"st-form\" onSubmit={onSubmitLogin}>\n\n                            <input \n                            className=\"st-input-field\" \n                            type='text' \n                            placeholder='Email' \n                            name='loginemail' \n                            value={loginemail} \n                            onChange={e => loginOnChange(e)}\n                            required\n                            ></input>\n\n                            <input \n                            className=\"st-input-field\" \n                            type='password' \n                            placeholder='Password' \n                            name='loginpassword' \n                            value={loginpassword} \n                            onChange={e => loginOnChange(e)}\n                            required\n                            ></input>\n\n                            <button type=\"submit\" className=\"st-button-secondary\" value=\"Login\">Enter</button>\n\n                        </form>\n\n                        <div className=\"st-card-el-h2\">Or</div>\n                        <div className=\"st-card-el-p\">Register a new business</div>\n\n                        <div className=\"st-card-el-h2\">Business Registration</div>\n\n                        <form className=\"st-form\" onSubmit={onSubmit}>\n\n                        <input \n                            className=\"st-input-field\" \n                            type='text' \n                            placeholder='Name' \n                            name='name' \n                            value={name} \n                            onChange={e => onChange(e)}\n                            required\n                        ></input>\n                        \n                        <input \n                            className=\"st-input-field\" \n                            type='text' \n                            placeholder='Email' \n                            name='email' \n                            value={email} \n                            onChange={e => onChange(e)}\n                            required\n                        ></input>\n\n                        <input \n                            className=\"st-input-field\" \n                            type='password' \n                            placeholder='Password' \n                            name='password' \n                            value={password} \n                            onChange={e => onChange(e)} \n                            required\n                            ></input>\n\n                            <input \n                            className=\"st-input-field\" \n                            type='password' \n                            placeholder='Confirm Password' \n                            name='password2' \n                            value={password2} \n                            onChange={e => onChange(e)}\n                            required\n                        ></input>\n\n                        <button type=\"submit\" className=\"st-button-secondary\" value=\"Register\">Create</button>\n\n                        </form>\n\n                        \n                    </div>\n\n                </div>\n\n\n                <div className=\"right\"></div>\n\n\n            </main>\n\n            <div className=\"footer\">\n                <div className=\"st-card-el-p\">Copyright &copy; Stuckcoder AS 2019 - All Rights Reserved</div>\n            </div>\n    </div>\n    )\n}\n\nexport default Company_login\n"]},"metadata":{},"sourceType":"module"}