{"ast":null,"code":"var _jsxFileName = \"/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/src/components/layout/common/Alert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Calling an action or getting state, use connect\n\nimport { connect } from 'react-redux';\n\nconst Alert = ({\n  alerts\n}) => alerts !== null && alerts.length > 0 && alerts.map(alert => React.createElement(\"div\", {\n  key: alert.id,\n  className: \"st-alert-text-\".concat(alert.alertType),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, alert.msg));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired // Mapping state to properties (Getting the state and mapping them to properties)\n\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","map":{"version":3,"sources":["/Users/bloomfieldhuntington/Documents/StuckCoder/stuckcoder2020/stuckcoder_application/client/src/components/layout/common/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","id","alertType","msg","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACdA,MAAM,KAAK,IAAX,IACAA,MAAM,CAACC,MAAP,GAAgB,CADhB,IAEAD,MAAM,CAACE,GAAP,CAAWC,KAAK,IACZ;AAAK,EAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,EAAA,SAAS,0BAAmBD,KAAK,CAACE,SAAzB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACMF,KAAK,CAACG,GADZ,CADJ,CAHA;;AASAP,KAAK,CAACQ,SAAN,GAAkB;AACdP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC,UADV,CAIlB;;AAJkB,CAAlB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AADkB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// Calling an action or getting state, use connect\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) => \nalerts !== null && \nalerts.length > 0 && \nalerts.map(alert => (\n    <div key={alert.id} className={`st-alert-text-${alert.alertType}`}>\n        { alert.msg }\n    </div>\n))\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\n// Mapping state to properties (Getting the state and mapping them to properties)\nconst mapStateToProps = (state) => ({\n    alerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert)\n\n"]},"metadata":{},"sourceType":"module"}